<UserControl x:Class="VersionManagementDemo.VersionOperationDockPaneView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:extensions="clr-namespace:ArcGIS.Desktop.Extensions;assembly=ArcGIS.Desktop.Extensions"
             xmlns:VersionManagementDemo="clr-namespace:VersionManagementDemo"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{Binding Path=ui.VersionOperationDockPaneViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <extensions:DesignOnlyResourceDictionary Source="pack://application:,,,/ArcGIS.Desktop.Framework;component\Themes\Default.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <VersionManagementDemo:ButtonStatusToContentConverter x:Key="ButtonStatusToContentConverter"></VersionManagementDemo:ButtonStatusToContentConverter>
            <VersionManagementDemo:BoolToDeleteRadioStatusConverter x:Key="BoolToDeleteRadioStatusConverter"></VersionManagementDemo:BoolToDeleteRadioStatusConverter>
            <VersionManagementDemo:InverseBooleanConverter x:Key="InverseBooleanConverter"></VersionManagementDemo:InverseBooleanConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" LastChildFill="true" KeyboardNavigation.TabNavigation="Local" Height="30">
            <TextBlock Grid.Column="1" Text="{Binding Heading}" Style="{DynamicResource Esri_TextBlockDockPaneHeader}">
                <TextBlock.ToolTip>
                    <WrapPanel Orientation="Vertical" MaxWidth="300">
                        <TextBlock Text="{Binding Heading}" TextWrapping="Wrap"/>
                    </WrapPanel>
                </TextBlock.ToolTip>
            </TextBlock>
        </DockPanel>

        <!-- Create versions -->
        <StackPanel Grid.Row="1" 
                    Background="Azure">
            <TextBlock Margin="6,0,0,0">
                 Enter the version name:
            </TextBlock>
            <DockPanel LastChildFill="True">
                <TextBox Margin="2,2,2,2" 
                         Width="230"
                         Text="{Binding VersionName}"/>
                <Button Content="Create" 
                        Command="{Binding CreateVersionCommand}"
                        DockPanel.Dock="Right" 
                        Margin="3,0,0,0"/>
            </DockPanel>
        </StackPanel>


        <!--Display all dataset versions -->
        <TextBlock Grid.Row="2" Text="List available version(s) ..."></TextBlock>
        <StackPanel Grid.Row="3" 
                    Name="DisplayVersionsStackPanel" CanVerticallyScroll="True">
            <ListBox x:Name="showVersionsListBox" 
                     ItemsSource="{Binding Versions}">

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <Border Margin="10,5,5,5" 
                                    Padding="50,1,1,1"
                                    CornerRadius="1" 
                                    BorderThickness=".5"
                                    BorderBrush="LightGray" 
                                    DockPanel.Dock="Top">
                                <StackPanel DockPanel.Dock="Right" 
                                            Orientation="Horizontal" >
                                <StackPanel.Resources>
                                    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                                    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                                    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Yellow"/>
                                    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                                    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                                    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                                    <SolidColorBrush x:Key="Button.Disabled.Background" Color="Aqua"/>
                                    <SolidColorBrush x:Key="Button.Disabled.Border" Color="DarkGreen"/>
                                    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Black"/>
                                    <Style x:Key="FocusVisual">
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="true" 
                                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                                                   StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="BaseButtonStyle" TargetType="{x:Type RadioButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Setter Property="Height" Value="25"></Setter>
                                                <Setter Property="Width" Value="70"></Setter>
                                                <Setter Property="Background" Value="Red"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="2"/>
                                        <Setter Property="Margin" Value="10,0,0,0"/>

                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                                            Background="{TemplateBinding Background}" 
                                                            SnapsToDevicePixels="true">
                                                            <ContentPresenter x:Name="contentPresenter" 
                                                                          Focusable="False" 
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          Margin="{TemplateBinding Padding}" 
                                                                          RecognizesAccessKey="True" 
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Background" TargetName="border" 
                                                                    Value="{StaticResource Button.MouseOver.Background}"/>
                                                            <Setter Property="BorderBrush" TargetName="border" 
                                                                    Value="{StaticResource Button.MouseOver.Border}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="Background" TargetName="border" 
                                                                    Value="{StaticResource Button.Pressed.Background}"/>
                                                            <Setter Property="BorderBrush" TargetName="border" 
                                                                    Value="{StaticResource Button.Pressed.Border}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Background" TargetName="border" 
                                                                    Value="{StaticResource Button.Disabled.Background}"/>
                                                            <Setter Property="BorderBrush" TargetName="border" 
                                                                    Value="{StaticResource Button.Disabled.Border}"/>
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                                                    Value="{StaticResource Button.Disabled.Foreground}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </StackPanel.Resources>

                                <TextBlock DockPanel.Dock="Left" Text="{Binding}" Width="100"/>

                                <RadioButton Name="SelectRadioAsButton" 
                                             GroupName="SelectRadios" 
                                             Content="{Binding IsChecked, ElementName=SelectRadioAsButton, Converter={StaticResource ButtonStatusToContentConverter} }" 
                                             Style="{StaticResource BaseButtonStyle}"
                                             Command="{Binding DataContext.SelectVersionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                             CommandParameter="{Binding}"/>

                                <RadioButton Name="DeleteRadioAsButton" 
                                             GroupName="DeleteRadios" 
                                             Content="Delete" 
                                             IsEnabled="{Binding IsChecked, ElementName=SelectRadioAsButton, Converter={ StaticResource BoolToDeleteRadioStatusConverter}}"  
                                             Style="{StaticResource BaseButtonStyle}"
                                             Command="{Binding DataContext.DeleteVersionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                             CommandParameter="{Binding}"/>
                            </StackPanel>
                            </Border>
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
        <!-- Features for partial posting -->
        <StackPanel Grid.Row="4">
            <DockPanel>
                <Label DockPanel.Dock="Left"> Select feature(s) for partial posting </Label>
                <Button DockPanel.Dock="Right" 
                        Content="Add Selected"
                        Margin="40,0,0,5"
                        Command="{Binding AddSelectedFeaturesForPartialPostCommand}"
                        Width="100"/>
            </DockPanel>
            <ListBox ItemsSource="{Binding SelectedFeatures}"></ListBox>
        </StackPanel>

        <!-- Deleted features for partial posting -->
        <StackPanel x:Name="StackPanelDeletedFeatures" Grid.Row="5" CanVerticallyScroll="True">
            <DockPanel>
                <Label DockPanel.Dock="Left">Deleted features</Label>
                <Button DockPanel.Dock="Right"
                        Content="Show" 
                        Command="{Binding ShowDeletedFeaturesCommand}"
                        Width="100"
                        Margin="150,0,0,5"/>
            </DockPanel>

            <ListBox x:Name="ListBoxDeletedFeatures" DockPanel.Dock="Bottom" 
                     ItemsSource="{Binding DeletedFeatures}"
                     SelectionMode="Multiple">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding DeletedFeaturesSelectionChangedCommand}"
                                                   CommandParameter="{Binding ElementName= ListBoxDeletedFeatures, Path=SelectedItems }" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
            </ListBox>
        </StackPanel>

        <!-- Reconcile and post operations -->
        <DockPanel Grid.Row="6" x:Name="ReconcileAndPost">
            <Button DockPanel.Dock="Left" 
                    Content="Reconcile"
                    Width="100"
                    Margin="5"
                    FontWeight="Bold"
                    Height="30"
                    Command="{Binding ReconcileCommand}"
                    IsEnabled="{Binding IsVersionSelected, Mode=TwoWay}"/>

            <Button DockPanel.Dock="Right" 
                    Content="Post"
                    Width="100"
                    Height="30"
                    FontWeight="Bold"
                    Command="{Binding PostCommand}"
                IsEnabled="{Binding IsVersionSelected, Mode=TwoWay}"/>
        </DockPanel>

        <!-- Reset the version to default -->
        <StackPanel Grid.Row="7"
                    x:Name="StackPanelResetToDefault">
            <Button Width="200"
                    Margin="5"
                    FontWeight="Bold"
                    Height="30"
                Content="Reset to Default Version" 
                Command="{Binding ResetVersionCommand }"
                IsEnabled="{Binding IsVersionSelected, Mode=TwoWay}"/>
        </StackPanel>
    </Grid>
</UserControl>
